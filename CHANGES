CHANGES

------------------------------------------------------------
CVS HEAD
------------------------------------------------------------

1999-12-18 warp:
 Feature:
  * Added new builtin 'builtin'
  * Added new evaluation strategy 'auto_resume'

 Portability:
  * New fallback builtin 'ls'

 Internal:
  * Changed prompt evaluation to be more bash compatible and
    to handle even complex prompts
  * Fixed generation of weekday names
  * Replaced Psh::OS::Unix::glob() - now uses an own glob
    routine instead CORE::glob() - and is significantly faster
    (important for executable completion)

1999-12-17 gwhitney:
 Internal:
  * Stab-in-the-dark attempt at a workaround for Schinder's failed
test on HPUX.
  * Documentation updates
  * quoted all non-trivial results of successful glob_expansion; the
idea is that if a glob pattern hits, the user probably doesn't want
any further expansion to occur, in particular Perl evaluation.
 Features:
  * %Psh::perl_builtins configuration variable now controls whether a
word should be considered a "perl function", as part of my ongoing
effort to tame this evaluation strategy. I'm not suggesting we put it
back in as a default strategy, but at least now if you use it, you can
tell it not to trigger on "grep" or "chmod" or whatever you like.

1999-12-16 warp: 
 Internal:
  * Used Pod::Text to generate the output of "help" builtin. Looks
much nicer now!
  * Support for TAB completions for builtins
  * Small fixes for setenv, print_list and abs_path

1999-12-15 gwhitney:
 Internal:
  * Fixed warnings generated by "make test", except for the "subroutine 
abs_path redefined" warning that I can't figure out how to avoid.
  * Avoided clobbering the SHELL environment variable, which other
shells leave alone; instead set CURRENT_SHELL to the path to psh.
  * Fixed output of alias to escape single quotes on RHS.
  * Documentation updates.

 Features:
  * Added brace evaluation strategy forcing Perl evaluation, and made
it a default strategy, to ensure standard pshrc does what is intended, 
and to be parallel with bang and comment.
  * added $Psh::prompt_cont variable for prompts on continuation
lines.
  * added $Psh::result_array variable to control where results of Perl 
evaluations are stored.
  * Moved the documentation for builtins into Psh::Builtin. Advantages 
of this: It's easy for the "help" builtin to get the documentation,
and the documentation of each builtin is right next to its definition.

1999-12-15 warp:
  * A custom_completions may now also be code. If the
    value of a custom_completions key/value pair is a sub
	that sub will be called and the result used as rules
  * A rule for custom_completions may now have an optional
    third argument. If that argument is true, the
	custom_completion will replace the standard completions
	instead of adding to them

1999-12-14 warp:
 Sorry for the rather unordered list - I did a lot of work
 that day

 Internal:
  * The builtin eval strategy now checks the Psh::Builtins
    namespace for a function with the name of the builtin
	after it checked %built_ins
  * Fixed the initialization so the short hostname is
    calculated from the longhost name instead of calling
	hostname -s
  * Moved almost all code from psh into Psh, Psh::Builtins
    and Psh::Util
  * Added portability infrastructure
  * Working Win32 port !!! (though it has limited features)
  * Added new eval strategy "fallback_builtin" - builtins of
    that type (currently searched in package Psh::Builtins::Fallback)
    will be executed AFTER no program of that name was found.
	This allows to simulate common commands like 'ls' and
	'env' on systems not having such binaries
  * Removed perlfunc again from the list of default strategies
    after it caused too many namespace collisions. I tried to
	fix it by adding a minimum argument number but it did not
	help either. Commands like mkdir, rmdir, chmod etc. MUST
	be accessible without escape in the default settings I
	think
  * Fixed signal description generation

 Features:
  * Changed builtin alias so that 'alias name' displays the
    alias definition for that name
  * Perl Symbol completion now supports package names and
    package name completion
  * Filename Completion respects the FIGNORE environment
    variable now
  * New Perl Hashkey completion will TAB complete the name
    of keys for Perl hashes (if they are not written in quotes)
  * The 'cd' builtin respects CDPATH now and sets OLDPWD
  * Environment variable SHELL is set to the path to psh
  * New builtin 'unalias'
  * It's now possible to do "bg commandname" (e.g. "bg emacs")
    fg has the same behaviour for consistency
  * Added 'env' builtin. On systems with an env binary installed
    it will use the binary, on other systems (namely Win32) it
	will print a list of environment variables
  * Variables for bookmark completion are now
    @Psh::Completion::bookmarks and @Psh::Completion::netprograms
  * Support for user defined completions by
    %Psh::Completion::custom_completions
  * New builtin 'help'

